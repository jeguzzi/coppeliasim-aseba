# import sys
import os
import argparse
import xml.etree.ElementTree as ET


def generate_split_reference(directory, source_file, prefix=''):
    robots = {'Thymio': {'prefix': '_thymio2_', 'category': 'thymio2'},
              'EPuck': {'prefix': '_epuck_', 'category': 'epuck'}}
    xml_file = os.path.join(directory, source_file)
    tree = ET.parse(xml_file)
    root = tree.getroot()
    aseba_root = ET.Element("plugin")
    aseba_tree = ET.ElementTree(aseba_root)
    aseba_root.attrib['name'] = f"{prefix}Aseba"
    aseba_root.attrib['author'] = "jerome@idsia.ch"
    for name in robots:
        robots[name]['root'] = ET.Element("plugin")
        robots[name]['tree'] = ET.ElementTree(robots[name]['root'])
        robots[name]['root'].attrib['name'] = f"{prefix}{name}"
        robots[name]['root'].attrib['author'] = "jerome@idsia.ch"

    for cmd in root.iter('command'):
        for name, data in robots.items():
            if data['prefix'] in cmd.attrib['name']:
                cmd.attrib['name'] = cmd.attrib['name'].split(data['prefix'])[-1]
                data['root'].append(cmd)
                break
        else:
            aseba_root.append(cmd)

    for s in root.iter('struct'):
        for c in s.iter('category'):
            for name, data in robots.items():
                if c.attrib['name'] == data['category']:
                    data['root'].append(s)
                    break
            else:
                continue
            break
        else:
            aseba_root.append(s)
    for s in root.iter('enum'):
        for c in s.iter('category'):
            for name, data in robots.items():
                if c.attrib['name'] == data['category']:
                    s.attrib['name'] = s.attrib['name'].split(data['prefix'])[-1]
                    data['root'].append(s)
                    break
            else:
                continue
            break
        else:
            aseba_root.append(s)
    aseba_file = "reference_Aseba.xml"
    aseba_tree.write(os.path.join(directory, aseba_file))
    for name, data in robots.items():
        robot_file = f"reference_{name}.xml"
        data['tree'].write(os.path.join(directory, robot_file))
    return aseba_file, robots


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generate API docs in markdown')
    parser.add_argument('--directory', type=str, default=".",
                        help='the directory with the autogenerated files')
    parser.add_argument('--file', type=str, default="reference.xml",
                        help='the reference xml file')
    parser.add_argument('--prefix', type=str, default="",
                        help='Prefix')
    args = parser.parse_args()
    generate_split_reference(args.directory, args.file, args.prefix)
